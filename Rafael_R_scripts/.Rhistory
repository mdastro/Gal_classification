set.seed(42)
#----------------------------------------------------------------##----------------------------------------------------------------#
# Read and store data
#AGN<- read.table("/Users/rafael/Dropbox/artigos/Meusartigos/IAA-WGC/Github/Gal_classification/Dataset/class_WHAN_BPT.dat",header=F)
#colnames(AGN)<-c("id", "xx_BPT", "yy_BPT", "class_BPT", "xx_WHAN",
#                         "yy_WHAN", "EW_NII_WHAN", "class_WHAN")
Dat <- read.csv("..//Dataset/class_WHAN_BPT_D4.csv",header=T)
heade(Dat)
header(Dat)
head(Dat)
AGN <- data.frame(xx_BPT = log(Dat$NII/Dat$H_alpha,10),yy_BPT = log(Dat$OIII/Dat$H_beta,10),
yy_WHAN = log(Dat$EW_H_alpha,10), dn4000_obs = Dat$dn4000_obs, dn4000_synth = Dat$dn4000_synth)
AGN
AGN[1,]
AGN2 <- AGN
AGN2 <- cbind(AGN,Dat$class_BPT)
plot(AGN2$xx_BPT,AGN2$yy_WHAN,shape=AGN2$`Dat$class_BPT`)
plot(AGN2$xx_BPT,AGN2$yy_WHAN,col=AGN2$`Dat$class_BPT`)
plot(AGN2$xx_BPT,AGN2$yy_BPT,col=AGN2$`Dat$class_BPT`)
require(magrittr)
AGN2 <- cbind(AGN,class= Dat$class_BPT)
AGN3 <- AGN2 %>%  filter(.,class="3")
AGN3 <- AGN2 %>%  filter(.,class=="3")
AGN3
which(AGN2, yy_BPT > 1.05 * xx_BPT + 0.45)
yy_BPT > 1.05 * xx_BPT + 0.45
AGN2$yy_BPT > 1.05 * AGN2$xx_BPT + 0.45
AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 && AGN2$yy_BPT >0.61 / (AGN2$xx_BPT - 0.47) + 1.19
AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19
AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45
AGN2[AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19,]
AGN2[AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45,]
AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 && AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19
AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 & AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19
summary(AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 & AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19)
plot(AGN2[AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 & AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19,])
AGN3 <- AGN2[AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 & AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19,]
plot(AGN3$xx_BPT,AGN3$yy_BPT)
index <- Dat$yy_BPT < 1.05 * Dat$xx_BPT + 0.45 & Dat$yy_BPT > 0.61 / (Dat$xx_BPT - 0.47) + 1.19
index
index <- AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19
Dat <- read.csv("..//Dataset/class_WHAN_BPT_D4.csv",header=T)
AGN <- data.frame(xx_BPT = log(Dat$NII/Dat$H_alpha,10),yy_BPT = log(Dat$OIII/Dat$H_beta,10),
yy_WHAN = log(Dat$EW_H_alpha,10), dn4000_obs = Dat$dn4000_obs, dn4000_synth = Dat$dn4000_synth)
index <- AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19
class_BPT4 %in% index
AGN$class_BPT4 <- Dat$class_BPT
class_BPT4 %in% index
Dat$class_BPT
AGN$class_BPT4 <- Dat$class_BPT
AGN$class_BPT4
AGN$class_BPT4%in% index
AGN$class_BPT4 <- Dat$class_BPT %>%
mutate(.,class_BPT4 %in% index =4 )
AGN$class_BPT4 <- Dat$class_BPT %>%
mutate(.,class_BPT4 %in% index <-4 )
AGN$class_BPT4 <- Dat$class_BPT %>%
AGN$class_BPT4[index] <- 4
AGN$class_BPT4[index]
AGN$class_BPT4[index] <- 4
AGN$class_BPT4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT4 <- Dat$class_BPT
mutate(AGN,
class_BPT4 = ifelse(1.05 * xx_BPT + 0.45 & yy_BPT > 0.61 / (xx_BPT - 0.47) + 1.19, 4, class_BPT4))
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
rm(AGN)
rm(AGN2)
Dat <- read.csv("..//Dataset/class_WHAN_BPT_D4.csv",header=T)
AGN <- data.frame(xx_BPT = log(Dat$NII/Dat$H_alpha,10),yy_BPT = log(Dat$OIII/Dat$H_beta,10),
yy_WHAN = log(Dat$EW_H_alpha,10), dn4000_obs = Dat$dn4000_obs, dn4000_synth = Dat$dn4000_synth)
AGN$class_BPT4 <- Dat$class_BPT
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
mutate(AGN,
class_BPT4 = ifelse(1.05 * xx_BPT + 0.45 & yy_BPT > 0.61 / (xx_BPT - 0.47) + 1.19, 4, class_BPT4))
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN<-mutate(AGN,
class_BPT4 = ifelse(1.05 * xx_BPT + 0.45 & yy_BPT > 0.61 / (xx_BPT - 0.47) + 1.19, 4, class_BPT4))
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT4 <- Dat$class_BPT
index <- AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT4 <- Dat$class_BPT
index <- AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
index
AGN$class_BPT4
summary(AGN$class_BPT4()
summary(AGN$class_BPT4)
summary(AGN$class_BPT4)
summary(as.factor(AGN$class_BPT4))
AGN3 <- AGN2[AGN2$yy_BPT < 1.05 * AGN2$xx_BPT + 0.45 & AGN2$yy_BPT > 0.61 / (AGN2$xx_BPT - 0.47) + 1.19,]
plot(AGN3$xx_BPT,AGN3$yy_BPT)
AGN3 <- AGN[AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19,]
plot(AGN3$xx_BPT,AGN3$yy_BPT)
AGN$class_BPT4 <- as.factor(AGN$class_BPT4)
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
index <- AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 &
AGN$xx_BPT > 0.5
AGN$class_BPT4[index] <- 4
AGN$class_BPT4 <- as.factor(AGN$class_BPT4)
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 &
AGN$xx_BPT > 0.5
index <- AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45 & AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 &
AGN$xx_BPT > 0.5
index
summary(index)
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
AGN$class_BPT4 <- as.factor(AGN$class_BPT4)
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT4[index]
AGN$class_BPT4 <- Dat$class_BPT
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
Dat$class_BPT4 <- AGN$class_BPT4
write.csv(Dat,"..//Dataset/class_WHAN_BPT_D5.csv")
seq(range(AGN$xx_BPT),0.1)
range(AGN$xx_BPT)
seq(range(AGN$xx_BPT)[1],AGN$xx_BPT[2],0.1)
seq(range(AGN$xx_BPT)[1],AGN$xx_BPT[2],0.01)
xx <- seq(range(AGN$xx_BPT)[1],AGN$xx_BPT[2],length.out = nrow(AGN))
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
index <- AGN$yy_BPT > 0.61 / (xx - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * xx + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
index
xx
xx <- seq(range(AGN$xx_BPT)[1]+0.1,AGN$xx_BPT[2]+0.1,length.out = nrow(AGN))
index <- AGN$yy_BPT > 0.61 / (xx - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * xx + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
xx <- seq(range(AGN$xx_BPT)[1]+0.1,AGN$xx_BPT[2]+0.1,length.out = nrow(AGN))
index <- AGN$yy_BPT > 0.61 / (xx - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * xx + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
index
range(xx)
range(AGN$xx_BPT)[1]
range(AGN$xx_BPT)
xx <- seq(range(AGN$xx_BPT)[1],AGN$xx_BPT[2],length.out = nrow(AGN))
range(xx)
AGN$xx_BPT[2]
xx <- seq(range(AGN$xx_BPT)[1],range(AGN$xx_BPT)[2],length.out = nrow(AGN))
index <- AGN$yy_BPT > 0.61 / (xx - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * xx + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT <- Dat$class_BPT
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT4 <- Dat$class_BPT
AGN$class_BPT <- Dat$class_BPT
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
AGN$class_BPT4 <- Dat$class_BPT
AGN$class_BPT <- Dat$class_BPT
index <- AGN$yy_BPT > 0.61 / (AGN$xx_BPT - 0.47) + 1.19 & AGN$yy_BPT < 1.05 * AGN$xx_BPT + 0.45
AGN$class_BPT4[index] <- 4
plot(AGN$xx_BPT,AGN$yy_BPT,col=AGN$class_BPT4)
Dat <- read.csv("..//Dataset/class_WHAN_BPT_D5.csv",header=T)
require(mclust)
require(reshape2)
library(plyr)
library(gridExtra)
library(circlize)
require(data.table)
source("ExClVal.R")
AGN <- data.frame(xx_BPT = log(Dat$NII/Dat$H_alpha,10),yy_BPT = log(Dat$OIII/Dat$H_beta,10),
yy_WHAN = log(Dat$EW_H_alpha,10), dn4000_obs = Dat$dn4000_obs, dn4000_synth = Dat$dn4000_synth)
# Subsampling for testing, not necessary in the final run
#test_index <- sample(seq_len(nrow(AGN)),replace=F, size = 10000)
AGN_short <- AGN[,c("xx_BPT", "yy_BPT","yy_WHAN")]
CLUST5 <- Mclust(AGN_short,G = 5,initialization=list(subset=sample(1:nrow(AGN_short), size=1000)),
modelName = "VVV")#Initialization with 1000 for higher speed
Dat$BPT_name4 = as.factor(Dat$class_BPT4)
Dat$WHAN_name = as.factor(Dat$class_WHAN)
#class BPT: (no class, SF, composite, AGN) = (0, 1, 2, 3)
# class WHAN: (no class, SF, sAGN, wAGN, retired, passive) = (0, 1, 2, 3, 4, 5)
Dat$BPT_name <- revalue(Dat$BPT_name, c("1"="SF","2"="Composite","3"="AGN") )
Dat$BPT_name4 <-revalue(Dat$BPT_name, c("1"="SF","2"="Composite","3"="AGN","4"="LINERs") )
Dat$WHAN_name <- revalue(Dat$WHAN_name, c("1"="SF","2"="sAGN","3"="wAGN","4"="retired") )
Dat$BPT_name4
Dat$BPT_name = as.factor(Dat$class_BPT)
Dat$BPT_name4 = as.factor(Dat$class_BPT4)
Dat$WHAN_name = as.factor(Dat$class_WHAN)
#class BPT: (no class, SF, composite, AGN) = (0, 1, 2, 3)
# class WHAN: (no class, SF, sAGN, wAGN, retired, passive) = (0, 1, 2, 3, 4, 5)
Dat$BPT_name <- revalue(Dat$BPT_name, c("1"="SF","2"="Composite","3"="AGN") )
Dat$BPT_name4 <-revalue(Dat$BPT_name4, c("1"="SF","2"="Composite","3"="AGN","4"="LINERs") )
Dat$BPT_name4
# Plotting the clustering results
clust<-CLUST5
class<-Dat$BPT_name4
data <- AGN_short[,1:2]
class2<-Dat$WHAN_name
data2 <- AGN_short[,c(1,3)]
fit0 <- ExClVal(class,clust,data=data)
fit<- ExClVal(class2,clust,data=data2)
bbb<-1-round(fit0$KL,3)
bbb[bbb<=0.93]<-0
rownames(bbb) <-c("GC1","GC2","GC3","GC4")
rownames(bbb) <-c("GC1","GC2","GC3","GC4","GC5")
chordDiagram(bbb,directional = 1,
row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"gray","gray","gray"))
chordDiagram(bbb,directional = 1,
row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
pdf("Figs/chord_bpt5.pdf",width = 5,height = 5)
chordDiagram(bbb,directional = 1,
row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
dev.off()
www<-1-round(fit$KL,3)
www[www<=0.95]<-0
rownames(www) <-c("GC1","GC2","GC3","GC4","GC5")
chordDiagram(www,directional = 1,row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray","gray"))
chordDiagram(www,directional = 1,row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
Dat$WHAN_name
Dat$WHAN_name <- revalue(Dat$WHAN_name, c("1"="SF","2"="sAGN","3"="wAGN","4"="retired") )
class2<-Dat$WHAN_name
data2 <- AGN_short[,c(1,3)]
fit<- ExClVal(class2,clust,data=data2)
www<-1-round(fit$KL,3)
www[www<=0.95]<-0
rownames(www) <-c("GC1","GC2","GC3","GC4","GC5")
chordDiagram(www,directional = 1,row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
pdf("Figs/chord_whan5.pdf",width = 5,height = 5)
chordDiagram(www,directional = 1,row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
dev.off()
www<-1-round(fit$KL,3)
www
www<-1-round(fit$KL,3)
www[www<=0.93]<-0
rownames(www) <-c("GC1","GC2","GC3","GC4","GC5")
chordDiagram(www,directional = 1,row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
pdf("Figs/chord_whan5.pdf",width = 5,height = 5)
chordDiagram(www,directional = 1,row.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00",
"brown"),
grid.col=c("#FF1493","#7FFF00", "#00BFFF", "#FF8C00","brown",
"gray","gray","gray","gray"))
dev.off()
sim5<-sim(modelName = CLUST5$modelName,
parameters = CLUST5$parameters,
n = nrow(AGN_short), seed = 0)
xrng = range(AGN_short$xx_BPT)
yrng = range(AGN_short$yy_BPT)
d0_BPT = kde2d(AGN_short$xx_BPT, AGN_short$yy_BPT, lims=c(xrng, yrng), n=100,
h = rep(0.05, 2))
d5_BPT = kde2d(sim5[,2],
sim5[,3], lims=c(xrng, yrng), n=100,
h = rep(0.05, 2))
#---------------------------------##---------------------------------#
# Plot smooth representation for original data and each cluster
rownames(d0_BPT$z) = d0_BPT$x
colnames(d0_BPT$z) = d0_BPT$y
rownames(d5_BPT$z) = d5_BPT$x
colnames(d5_BPT$z) = d5_BPT$y
# Now melt it to long format
d0_BPT.m = melt(d0_BPT$z, id.var=rownames(d0_BPT))
names(d0_BPT.m) = c("x","y","z")
d5_BPT.m = melt(d5_BPT$z, id.var=rownames(d5_BPT))
names(d5_BPT.m) = c("x","y","z")
gcomb<-rbind(d0_BPT.m,d5_BPT.m)
gcomb$case <- factor(rep(c("Dat","5 clusters"),each=1e4),levels=c("Data", "5 clusters"))
library(viridis)
colors <- colorRampPalette(c('white','cyan4','orange','red','darkred'))(30)
colors2 <- c('white',plasma(30))
ggplot(gcomb, aes(x, y, z=z, fill=z)) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=5e2,geom="polygon") +
scale_fill_gradientn(colours=colors) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 20))+
facet_wrap(~case)
gcomb$case
gcomb$case <- factor(rep(c("Data","5 clusters"),each=1e4),levels=c("Data", "5 clusters"))
ggplot(gcomb, aes(x, y, z=z, fill=z)) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=5e2,geom="polygon") +
scale_fill_gradientn(colours=colors) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 20))+
facet_wrap(~case)
obs<-as.numeric(d0_BPT$z)
pred5<-as.numeric(d5_BPT$z)
fit5<-lm(obs~pred5)
gfit5<-data.frame(x=obs,y=pred5)
# Labels for R^2
lb5 = paste("R^2==",round(summary(fit5)$r.squared,2))
gfit<-ggplot(gfit5,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 1),se = TRUE,method = "lm",color="green3")+
theme_bw()+
scale_y_continuous(breaks = c(-0.01,0,1.5,3,4.5,6),
labels=c("",0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 20))+xlab("Observed")+
ylab("Predicted")+
annotate("text",
label = c(lb5), size = 5, x = 1.25, y = 5.5,parse=TRUE)
gfit
xrng_w = range(AGN_short$xx_BPT)
yrng_w = range(AGN_short$yy_WHAN)
d0_WHAN = kde2d(AGN_short$xx_BPT, AGN_short$yy_WHAN, lims=c(xrng_w, yrng_w), n=100,
h = rep(0.05, 2))
d5_WHAN = kde2d(sim5[,2],
sim5[,4], lims=c(xrng_w, yrng_w), n=100,
h = rep(0.05, 2))
rownames(d0_WHAN$z) = d0_WHAN$x
colnames(d0_WHAN$z) = d0_WHAN$y
rownames(d5_WHAN$z) = d5_WHAN$x
colnames(d5_WHAN$z) = d5_WHAN$y
# Now melt it to long format
d0_WHAN.m = melt(d0_WHAN$z, id.var=rownames(d0_WHAN))
names(d0_WHAN.m) = c("x","y","z")
d5_WHAN.m = melt(d5_WHAN$z, id.var=rownames(d5_WHAN))
names(d5_WHAN.m) = c("x","y","z")
gcomb_WHAN<-rbind(d0_WHAN.m,d5_WHAN.m)
gcomb_WHAN$case <- factor(rep(c("Data","5 clusters"),each=1e4),levels=c("Data", "5 clusters"))
#colors <- colorRampPalette(c('white','blue','yellow','red','darkred'))(20)
# Plot difference
ggplot(gcomb_WHAN, aes(x, y, z=z, fill=z)) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log EW(H', alpha, ')'))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=5e2,geom="polygon") +
scale_fill_gradientn(colours=colors) +
coord_cartesian(xlim=xrng_w, ylim=yrng_w) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 20))+
facet_wrap(~case)
diff05_WHAN <- d0_WHAN
diff05_WHAN$z = (d0_WHAN$z - d5_WHAN$z)
obs_WHAN<-as.numeric(d0_WHAN$z)
pred5_WHAN<-as.numeric(d5_WHAN$z)
fit5_WHAN<-lm(obs_WHAN~pred5_WHAN)
gfit5_WHAN<-data.frame(x=obs_WHAN,y=pred5_WHAN)
# Labels for R^2
wb5 = paste("R^2==",round(summary(fit5_WHAN)$r.squared,2))
gfit_w<-ggplot(gfit5_WHAN,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 1),se = TRUE,method = "lm",color="green3")+
theme_bw()+
scale_y_continuous(breaks = c(-0.01,0,1.5,3,4.5,6),
labels=c("",0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 20))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)+
annotate("text",
label = c(wb2,wb3,wb4), size = 5, x = 1.25, y = 4.75,parse=TRUE)
gfit_w<-ggplot(gfit5_WHAN,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 1),se = TRUE,method = "lm",color="green3")+
theme_bw()+
scale_y_continuous(breaks = c(-0.01,0,1.5,3,4.5,6),
labels=c("",0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 20))+xlab("Observed")+
ylab("Predicted")+
annotate("text",
label = c(wb5), size = 5, x = 1.25, y = 4.75,parse=TRUE)
gfit_w
gfit5_WHAN
d5_WHAN
CLUST5
plot(CLUST5)
1500/23
65*4.6
1000/40
185/25
(185/25)*4.1
library(gmp) # GNU Multiple Precision Arithmetic Library
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
}
answer <- n
print(answer)
library(gmp) # GNU Multiple Precision Arithmetic Library
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
}
answer <- n
print(answer)
install.packages("gmp")
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
}
answer <- n
print(answer)
library(gmp) # GNU Multiple Precision Arithmetic Library
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
}
answer <- n
print(answer)
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
print(n)
}
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
print(n)
}
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
print(fib)
}
n <- 1
fib <- 1
while (nchar(as.character(fib)) < 1000) {
fib <- fibnum(n) # Determine next Fibonacci number
n <- n + 1
}
answer <- n
print(answer)
fib
1000/40
40*4.1
7*145
1015*3.2
1000*65*0.05
150*65*0.05
3.2*(487.5)
