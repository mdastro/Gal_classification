coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=1e2,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
diff02 <- d0_BPT
diff02$z = (d0_BPT$z - d2_BPT$z)/d0_BPT$z
diff03 <- d0_BPT
diff03$z = (d0_BPT$z - d3_BPT$z)/d0_BPT$z
diff04 <- d0_BPT
diff04$z = (d0_BPT$z - d4_BPT$z)/d0_BPT$z
rownames(diff02$z) = diff02$x
colnames(diff02$z) = diff02$y
rownames(diff03$z) = diff03$x
colnames(diff03$z) = diff03$y
rownames(diff04$z) = diff04$x
colnames(diff04$z) = diff04$y
# Now melt it to long format
diff02.m = melt(diff02$z, id.var=rownames(diff02))
names(diff02.m) = c("x","y","z")
diff03.m = melt(diff03$z, id.var=rownames(diff03))
names(diff03.m) = c("x","y","z")
diff04.m = melt(diff04$z, id.var=rownames(diff04))
names(diff04.m) = c("x","y","z")
diffcomb<-rbind(diff02.m,diff03.m,diff04.m)
diffcomb$case <- factor(rep(c("2 clusters","3 clusters","4 clusters"),each=1e4),levels=c("2 clusters", "3 clusters", "4 clusters"))
# Plot difference between geyser2 and geyser1 density
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=1e2,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 1) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
range(diff02$z)
diff02 <- d0_BPT
diff02$z = (d0_BPT$z - d2_BPT$z)
diff03 <- d0_BPT
diff03$z = (d0_BPT$z - d3_BPT$z)
diff04 <- d0_BPT
diff04$z = (d0_BPT$z - d4_BPT$z)
rownames(diff02$z) = diff02$x
colnames(diff02$z) = diff02$y
rownames(diff03$z) = diff03$x
colnames(diff03$z) = diff03$y
rownames(diff04$z) = diff04$x
colnames(diff04$z) = diff04$y
# Now melt it to long format
diff02.m = melt(diff02$z, id.var=rownames(diff02))
names(diff02.m) = c("x","y","z")
diff03.m = melt(diff03$z, id.var=rownames(diff03))
names(diff03.m) = c("x","y","z")
diff04.m = melt(diff04$z, id.var=rownames(diff04))
names(diff04.m) = c("x","y","z")
diffcomb<-rbind(diff02.m,diff03.m,diff04.m)
diffcomb$case <- factor(rep(c("2 clusters","3 clusters","4 clusters"),each=1e4),levels=c("2 clusters", "3 clusters", "4 clusters"))
# Plot difference between geyser2 and geyser1 density
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=1e2,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..),trans="log", bins=1e2,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=1e2,geom="polygon")+
scale_fill_gradient2(trans="log",low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=1e2,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=1e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=4e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..), bins=4e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="gray"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=4e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="gray"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=1e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="gray"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
ggplot(diffcomb , aes(x, y, z=z)) +
#  geom_tile() +
#  stat_density2d(na.rm = TRUE,n = 50,contour = TRUE) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=5e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
obs<-as.numeric(d0_BPT$z)
pred2<-as.numeric(d2_BPT$z)
pred3<-as.numeric(d3_BPT$z)
pred4<-as.numeric(d4_BPT$z)
fit2<-lm(obs~pred2)
fit3<-lm(obs~pred3)
fit4<-lm(obs~pred4)
gfit2<-data.frame(x=obs,y=pred2)
gfit3<-data.frame(x=obs,y=pred3)
gfit4<-data.frame(x=obs,y=pred4)
gfitcomb<-rbind(gfit2,gfit3,gfit4)
dim(gfitcomb)
gfitcomb$case <- factor(rep(c("Data","2 clusters","3 clusters","4 clusters"),each=1e4),
levels=c("Data","2 clusters", "3 clusters", "4 clusters"))
gfitcomb$case <- factor(rep(c("2 clusters","3 clusters","4 clusters"),each=1e4),
levels=c("2 clusters", "3 clusters", "4 clusters"))
ggplot(gfitcomb,aes(x=x,y=y))+geom_point()+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm")+
theme_bw()+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
gdiff<-ggplot(diffcomb , aes(x, y, z=z)) +
xlab(expression(paste('log [NII]/H', alpha))) +
ylab(expression(paste('log [OIII]/H', beta))) +
stat_contour(aes(fill =..level..,alpha=..level..), bins=5e3,geom="polygon")+
scale_fill_gradient2(low="blue4", mid="white", high="red",midpoint = 0) +
coord_cartesian(xlim=xrng, ylim=yrng) +
guides(colour=FALSE)+theme_bw()+
theme(panel.background = element_rect(fill="white"),
#        panel.grid.major.x = element_blank(),
#        panel.grid.minor.x = element_blank(),
#        panel.grid.major.y = element_blank(),
#        panel.grid.minor.y = element_blank(),
legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+
facet_wrap(~case)
gfit<-ggplot(gfitcomb,aes(x=x,y=y))+geom_point()+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm")+
theme_bw()+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
grid.arrange(gdiff, gfit, ncol = 1,nrow=2)
gdiff
gfit
grid.arrange(gdiff, gfit, ncol = 3,nrow=2)
grid.arrange(gdiff, gfit, ncol = 1,nrow=2)
ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray60")+
stat_smooth(formula=y ~ poly(x, 3),se = TRUE,method = "lm")+
theme_bw()+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray60")+
stat_smooth(formula=y ~ poly(x, 3),se = TRUE,method = "lm",color="red3")+
theme_bw()+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
gfit<-ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
grid.arrange(gdiff, gfit, ncol = 1,nrow=2)
ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
scale_y_continuous(breaks = c(0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
gfit<-ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
scale_y_continuous(breaks = c(0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
grid.arrange(gdiff, gfit, ncol = 1,nrow=2)
ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
scale_y_continuous(breaks = c(-0.01,0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
scale_y_continuous(breaks = c(-0.01,0,1.5,3,4.5,6),
labels=c("",0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
gfit<-ggplot(gfitcomb,aes(x=x,y=y))+geom_point(color="gray80")+
stat_smooth(formula=y ~ poly(x, 2),se = TRUE,method = "lm",color="red3")+
theme_bw()+
scale_y_continuous(breaks = c(-0.01,0,1.5,3,4.5,6),
labels=c("",0,1.5,3,4.5,6))+
scale_x_continuous(breaks = c(0,1.5,3,4.5,6))+
theme(legend.background = element_rect(fill="white"),
legend.key = element_rect(fill = "white",color = "white"),
plot.background = element_rect(fill = "white"),
legend.position="top",
axis.title.y = element_text(vjust = 0.1,margin=margin(0,10,0,0)),
axis.title.x = element_text(vjust = 0.5),
text = element_text(size = 25,family="serif"))+xlab("Observed")+
ylab("Predicted")+
facet_wrap(~case)
grid.arrange(gdiff, gfit, ncol = 1,nrow=2)
